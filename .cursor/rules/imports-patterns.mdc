# Import Patterns Rule

## Core Principle
Use `@/` imports unless the component is a direct `./` sibling. Avoid `../` imports.

## Implementation Details
- Use path aliases configured in tsconfig.json
- `@/` should map to the project's src directory
- Only use relative imports (`./`) for files in the same directory
- Never use parent directory imports (`../`)

## Examples

### Good ✓
```typescript
// In src/components/features/UserList.tsx
import { Button } from "@/components/ui/Button";
import { useAuth } from "@/hooks/useAuth";
import { UserCard } from "./UserCard"; // Same directory
```

### Bad ✗
```typescript
// In src/components/features/UserList.tsx
import { Button } from "../ui/Button"; // Avoid ../
import { useAuth } from "../../hooks/useAuth"; // Never use multiple ../
```

## Special Cases
- For monorepo or workspace imports, follow the established pattern
- Check neighboring files for consistency
- When in doubt, use absolute imports with `@/`