# Routing and Links Rule

## Core Principle
For internal links, use the Link and LinkReact components as they handle prefixing.

## Import Patterns

### For Astro Components
```astro
---
import Link from "@/components/Common/Link.astro";
---

<Link href="/about">About Us</Link>
```

### For React Components
```tsx
import LinkReact from "@/components/Common/LinkReact";

export default function Navigation() {
  return (
    <nav>
      <LinkReact href="/products">Products</LinkReact>
    </nav>
  );
}
```

## Why Use These Components
- Automatic path prefixing for deployment
- Consistent link behavior across the app
- Built-in accessibility features
- Type safety for internal routes

## Bad Practices âœ—
```astro
<!-- Don't use raw anchor tags for internal links -->
<a href="/about">About</a>

<!-- Don't use Astro's built-in link -->
<a href={`${import.meta.env.BASE_URL}/about`}>About</a>
```

## External Links
For external links, regular anchor tags are acceptable:
```astro
<a href="https://example.com" target="_blank" rel="noopener noreferrer">
  External Site
</a>
```

## Link Props
- href: Required, the destination path
- class/className: For styling
- All standard anchor attributes are supported