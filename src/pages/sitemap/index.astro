---
import Container from "@/components/Common/Container";
import PageLayout from "@/layouts/PageLayout.astro";
import SitemapSection from "@/components/Sitemap/SitemapSection";
import { buildSitemapEntries, type Entry } from "@/utils/sitemap";

const allEntries = await buildSitemapEntries();

// Group entries by type
const eventPages = allEntries.filter(
  (e) => e.href?.startsWith("/events/") && e.href !== "/events/list" && e.href !== "/events/album",
);

const venuePages = allEntries.filter((e) => e.href?.startsWith("/venue/"));

// Get article pages
const articlePages = allEntries.filter((e) => e.href?.startsWith("/articles/"));

// Get other markdown pages (excluding articles)
const otherMarkdownPages = allEntries.filter(
  (e) =>
    !e.href?.startsWith("/events/") &&
    !e.href?.startsWith("/venue/") &&
    !e.href?.startsWith("/articles/") &&
    !e.href?.endsWith(".xml") &&
    !e.href?.endsWith(".ics") &&
    e.href !== "/" &&
    e.href !== "/events" &&
    e.href !== "/events/list" &&
    e.href !== "/events/album" &&
    e.href !== "/about" &&
    e.href !== "/sitemap",
);

// Build main routes in specific order
const mainRoutes = [
  allEntries.find((e) => e.href === "/"),
  allEntries.find((e) => e.href === "/events"),
  allEntries.find((e) => e.href === "/events/list"),
  allEntries.find((e) => e.href === "/events/album"),
  allEntries.find((e) => e.href === "/about"),
  ...otherMarkdownPages.sort((a, b) => a.title.localeCompare(b.title)), // Add non-article markdown pages here
  allEntries.find((e) => e.href === "/sitemap"),
  allEntries.find((e) => e.href === "/sitemap.xml"),
  allEntries.find((e) => e.href === "/rss.xml"),
  allEntries.find((e) => e.href === "/oktech-events.ics"),
].filter((entry): entry is Entry => entry !== undefined); // Type guard to ensure only Entry types

// Sort events, venues, and articles alphabetically
eventPages.sort((a, b) => a.title.localeCompare(b.title));
venuePages.sort((a, b) => a.title.localeCompare(b.title));
articlePages.sort((a, b) => a.title.localeCompare(b.title));
---

<PageLayout>
  <div class="flex flex-col">
    <Container className="flex w-full flex-col gap-8 py-12">
      <div class="prose max-w-none">
        <h1>Sitemap</h1>
        <p>
          This page displays every route on the website. A machine readable
          <a href="/sitemap.xml" target="_blank">sitemap.xml</a>
          is also available.
        </p>
      </div>
    </Container>
    <div class="bg-base-100 flex flex-col gap-24 py-8 pb-32">
      <!-- Main Routes Section -->
      <SitemapSection title="Main Pages" entries={mainRoutes} client:load />

      <!-- Articles Section -->
      <SitemapSection title="Articles" entries={articlePages} client:load />

      <!-- Events Section -->
      <SitemapSection title="Events" entries={eventPages} client:load />

      <!-- Venues Section -->
      <SitemapSection title="Venues" entries={venuePages} client:load />
    </div>
  </div>
</PageLayout>
